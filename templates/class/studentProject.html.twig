{% extends 'layout.html.twig' %}

{% block content %}
    <h1>Proyectos del Grupo</h1>
    <i class="fa-solid fa-arrows-up-down"></i>
    <form id="priorityForm" method="post" action="{{ path('prioritizeProjects') }}">
        <ul id="sortableList" class="list-group">
            {% for project in projects %}
                <li class="list-group-item" data-project-id="{{ project.id }}">
                    {% if projectPriorities[project.id] is defined %}
                        <span class="badge bg-primary me-2">{{ projectPriorities[project.id] }}</span>
                    {% endif %}
                    <strong>{{ project.name }}</strong> - {{ project.description }}
                </li>
            {% else %}
                <li class="list-group-item">No hay proyectos disponibles.</li>
            {% endfor %}
        </ul>

        <input type="hidden" name="orderedProjectIds" id="orderedProjectIds">
        <button type="submit" class="btn btn-primary mt-3">Guardar Prioridades</button>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        // Inicializamos Sortable.js en la lista con el ID `sortableList`
        const sortable = new Sortable(document.getElementById('sortableList'), {
            animation: 150,
            onEnd: function () {
                updateOrder(); // Actualiza el orden después de cada acción de arrastrar y soltar
            }
        });

        function updateOrder() {
            // Selecciona todos los elementos dentro de la lista con `list-group-item`
            const orderedIds = Array.from(document.querySelectorAll('#sortableList .list-group-item'))
                .map(item => item.dataset.projectId); // Extrae el valor de `data-project-id`

            // Actualiza el valor del campo oculto con el array convertido a JSON
            document.getElementById('orderedProjectIds').value = JSON.stringify(orderedIds);

            // Actualiza las etiquetas de número de prioridad
            document.querySelectorAll('#sortableList .list-group-item').forEach((item, index) => {
                const badge = item.querySelector('.badge');
                if (badge) {
                    badge.textContent = index + 1; // Actualiza el número
                }
            });

            console.log('Orden actualizado:', orderedIds); // Depuración: imprime el orden en la consola
        }

        document.getElementById('priorityForm').addEventListener('submit', function (event) {
            updateOrder();
            console.log('Formulario enviado con prioridades:', document.getElementById('orderedProjectIds').value);
        });

        updateOrder(); // Actualiza el orden inicial cuando la página se carga
    </script>
{% endblock %}
